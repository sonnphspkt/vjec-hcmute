import StudentCVForm from '@/components/StudentCVForm'
import { Briefcase, FileText, TrendingUp, Clock } from 'lucide-react'

// Mock recommended jobs for student
const mockRecommendedJobs = [
  {
    id: '1',
    title: 'Frontend Developer Intern',
    description: 'C∆° h·ªôi th·ª±c t·∫≠p tuy·ªát v·ªùi cho sinh vi√™n IT. H·ªçc h·ªèi React, Next.js t·ª´ ƒë·ªôi ng≈© senior experience.',
    salary: '3,000,000 - 5,000,000 VND',
    country: 'Vi·ªát Nam',
    jobType: 'INTERNSHIP',
    category: 'C√¥ng ngh·ªá th√¥ng tin',
    skills: ['React', 'JavaScript', 'HTML/CSS'],
    createdAt: new Date('2024-01-15'),
    employer: {
      company: 'Tech Startup VN'
    }
  },
  {
    id: '2', 
    title: 'Software Engineer - Entry Level',
    description: 'V·ªã tr√≠ entry-level cho sinh vi√™n m·ªõi t·ªët nghi·ªáp. Training ƒë·∫ßy ƒë·ªß, m√¥i tr∆∞·ªùng th√¢n thi·ªán.',
    salary: '12,000,000 - 18,000,000 VND',
    country: 'Vi·ªát Nam',
    jobType: 'FULLTIME',
    category: 'C√¥ng ngh·ªá th√¥ng tin',
    skills: ['Java', 'Spring Boot', 'MySQL'],
    createdAt: new Date('2024-01-14'),
    employer: {
      company: 'Software Solutions Co.'
    }
  },
  {
    id: '3',
    title: 'IT Support Specialist',
    description: 'H·ªó tr·ª£ k·ªπ thu·∫≠t cho c√¥ng ty Nh·∫≠t B·∫£n t·∫°i TP.HCM. C∆° h·ªôi h·ªçc ti·∫øng Nh·∫≠t v√† ph√°t tri·ªÉn career.',
    salary: '8,000,000 - 12,000,000 VND',
    country: 'Vi·ªát Nam',
    jobType: 'FULLTIME', 
    category: 'C√¥ng ngh·ªá th√¥ng tin',
    skills: ['Windows', 'Networking', 'Ti·∫øng Nh·∫≠t N4+'],
    createdAt: new Date('2024-01-13'),
    employer: {
      company: 'Sakura Technologies'
    }
  }
]

function StatsCard({ title, value, icon: Icon, color, bgColor }: {
  title: string
  value: string | number
  icon: React.ComponentType<{ className?: string }>
  color: string
  bgColor: string
}) {
  return (
    <div className="bg-white rounded-lg p-6 shadow-sm border">
      <div className="flex items-center justify-between">
        <div>
          <p className="text-sm font-medium text-gray-600">{title}</p>
          <p className={`text-2xl font-bold ${color}`}>{value}</p>
        </div>
        <div className={`${bgColor} p-3 rounded-full`}>
          <Icon className={`h-6 w-6 ${color}`} />
        </div>
      </div>
    </div>
  )
}

export default function StudentPage() {
  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
        {/* Header */}
        <div className="mb-8">
          <h1 className="text-3xl font-bold text-gray-900">Dashboard Sinh vi√™n</h1>
          <p className="text-gray-600 mt-2">Qu·∫£n l√Ω h·ªì s∆° v√† t√¨m ki·∫øm c∆° h·ªôi vi·ªác l√†m ph√π h·ª£p</p>
        </div>

        {/* Stats */}
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8">
          <StatsCard
            title="Vi·ªác l√†m ph√π h·ª£p"
            value={mockRecommendedJobs.length}
            icon={Briefcase}
            color="text-blue-600"
            bgColor="bg-blue-100"
          />
          <StatsCard
            title="H·ªì s∆° ho√†n thi·ªán"
            value="75%"
            icon={FileText}
            color="text-green-600"
            bgColor="bg-green-100"
          />
          <StatsCard
            title="L∆∞·ª£t xem h·ªì s∆°"
            value="24"
            icon={TrendingUp}
            color="text-purple-600"
            bgColor="bg-purple-100"
          />
          <StatsCard
            title="·ª®ng tuy·ªÉn g·∫ßn ƒë√¢y"
            value="3"
            icon={Clock}
            color="text-orange-600"
            bgColor="bg-orange-100"
          />
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-3 gap-8">
          {/* Student Profile Form - Takes 2 columns */}
          <div className="lg:col-span-2">
            <StudentCVForm />
          </div>

          {/* Recommended Jobs - Takes 1 column */}
          <div className="space-y-6">
            <div className="bg-white rounded-lg shadow-sm border">
              <div className="px-6 py-4 border-b border-gray-200">
                <h3 className="text-lg font-semibold text-gray-900">
                  Vi·ªác l√†m ph√π h·ª£p ({mockRecommendedJobs.length})
                </h3>
                <p className="text-sm text-gray-600 mt-1">
                  D·ª±a tr√™n h·ªì s∆° v√† k·ªπ nƒÉng c·ªßa b·∫°n
                </p>
              </div>
              <div className="p-6 space-y-4">
                {mockRecommendedJobs.map((job) => (
                  <div key={job.id} className="border border-gray-200 rounded-lg p-4 hover:shadow-md transition-shadow">
                    <h4 className="font-semibold text-gray-900 mb-2">{job.title}</h4>
                    <p className="text-sm text-gray-600 mb-3 line-clamp-2">{job.description}</p>
                    <div className="flex items-center justify-between text-xs text-gray-500">
                      <span>{job.employer.company}</span>
                      <span className="font-medium text-green-600">{job.salary}</span>
                    </div>
                    <div className="flex flex-wrap gap-1 mt-2">
                      {job.skills.slice(0, 2).map((skill, index) => (
                        <span key={index} className="px-2 py-1 bg-blue-100 text-blue-800 text-xs rounded">
                          {skill}
                        </span>
                      ))}
                      {job.skills.length > 2 && (
                        <span className="px-2 py-1 bg-gray-100 text-gray-600 text-xs rounded">
                          +{job.skills.length - 2}
                        </span>
                      )}
                    </div>
                    <button className="w-full mt-3 px-4 py-2 bg-blue-600 text-white text-sm rounded-lg hover:bg-blue-700 transition-colors">
                      Xem chi ti·∫øt
                    </button>
                  </div>
                ))}
                <div className="text-center pt-4">
                  <button className="text-blue-600 hover:text-blue-700 text-sm font-medium">
                    Xem t·∫•t c·∫£ vi·ªác l√†m ph√π h·ª£p ‚Üí
                  </button>
                </div>
              </div>
            </div>

            {/* Quick Actions */}
            <div className="bg-white rounded-lg shadow-sm border p-6">
              <h3 className="text-lg font-semibold text-gray-900 mb-4">H√†nh ƒë·ªông nhanh</h3>
              <div className="space-y-3">
                <button className="w-full px-4 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors text-left">
                  üìÑ T·∫£i xu·ªëng CV m·∫´u
                </button>
                <button className="w-full px-4 py-3 bg-purple-600 text-white rounded-lg hover:bg-purple-700 transition-colors text-left">
                  üìö Kh√≥a h·ªçc k·ªπ nƒÉng mi·ªÖn ph√≠
                </button>
                <button className="w-full px-4 py-3 bg-orange-600 text-white rounded-lg hover:bg-orange-700 transition-colors text-left">
                  üí¨ T∆∞ v·∫•n ngh·ªÅ nghi·ªáp 1:1
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  )
} 